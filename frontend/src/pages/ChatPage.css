/* frontend/src/pages/ChatPage.css */

.chat-page-container {
  display: grid;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  
  /* Layout par défaut pour les grands écrans */
  grid-template-columns: 70px 320px 1fr 300px;
  grid-template-areas: "icons sidebar main info"; /* On nomme nos zones */
}

/* On assigne chaque composant à sa zone */
.icon-sidebar-container { grid-area: icons; }
.new-sidebar-container { grid-area: sidebar; }
.chat-window-container { grid-area: main; }
.info-panel-container { grid-area: info; }


/* --- GESTION DU RESPONSIVE --- */

/* Pour les tablettes et petits écrans, on cache le panneau d'infos */
@media (max-width: 1024px) {
  .chat-page-container {
    grid-template-columns: 70px 320px 1fr;
    grid-template-areas: "icons sidebar main";
  }

  .info-panel-container {
    display: none; /* On le fait disparaître */
  }
}

/* Pour les mobiles, on affiche une seule colonne à la fois */
@media (max-width: 768px) {
  .chat-page-container {
    grid-template-columns: 100%; /* Une seule colonne */
    grid-template-areas: "main"; /* Par défaut, on affiche le chat */
  }
  
  /* On cache les sidebars par défaut sur mobile */
  .icon-sidebar-container,
  .new-sidebar-container {
    display: none;
  }
  
  /* --- Logique pour afficher les sidebars sur mobile --- */
  /* On utilisera des états dans React pour ajouter ces classes */

  .chat-page-container.show-icons .icon-sidebar-container {
    display: flex; /* On peut le réafficher si besoin */
    grid-area: icons; /* On s'assure qu'il prend la bonne place */
  }

  .chat-page-container.show-sidebar .new-sidebar-container {
    display: flex; /* On peut le réafficher si besoin */
    grid-area: sidebar; /* On s'assure qu'il prend la bonne place */
  }
}